#!/bin/bash
if [ "${#}" -ne "3" ]; then
  echo -e "Necessário três parâmetros: \e[33m$0\e[0m \e[35maaa.bbb.ccc.ddd/ee\e[0m \e[35myyy\e[0m \e[35mzz\e[0m"
  echo -e "1: Endereço de rede com máscara para efetuar o ping em todos os dispositivos dessa rede."
  echo -e "2: Timeout em milissegundos. Sugerido entre \e[35m5\e[0m e \e[35m200\e[0m, dependendo do cenário."
  echo -e "3: Quantos endereços por linha para exibição. Sugerido \e[35m12\e[0m ou \e[35m16\e[0m, dependendo da resolução do terminal."
  exit 1
fi

if [ "$( echo "${1}" | grep -Eco '(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)))' )" -ne 1 ]; then
  echo -e "Endereço IP/rede inválido. Formato \e[35maaa.bbb.ccc.ddd/eee\e[0m"
  exit 1
fi

if [ "$( echo "${1}" | awk -F'/' '{print $2}' )" -lt 16 ] || [ "$( echo "${1}" | awk -F'/' '{print $2}' )" -gt 31 ]; then
  echo -e "Máscara inválida. Configurado para aceitar entre \e[35m/16\e[0m e \e[35m/31\e[0m."
  exit 1
fi

if [ "${2}" -lt 1 ] || [ "${2}" -gt 2000 ]; then
  echo -e "Timeout inválido. Configurado para aceitar valores entre \e[35m2\e[0m e \e[35m2000\e[0m (milissegundos)."
  exit 1
fi

if [ "${3}" -lt 1 ] || [ "${3}" -gt 32 ]; then
  echo -e "Número de colunas inválido. Configurado para aceitar valores entre entre \e[35m1\e[0m e \e[35m32\e[0m."
  exit 1
fi

if [ $( which fping | wc -l ) -eq 0 ]; then
  echo "É necessário instalar o pacote \"fping\" para continuar."
  echo "sudo apt install fping -y"
  exit 1
fi

function TOPING() {
  IPS=()
  NET=(${1//\// })
  IPADDR=(${NET[0]//./ })
  if [[ ${NET[1]} =~ '.' ]]; then
    NETMASK=(${NET[1]//./ })
  else
    if [[ $((8-${NET[1]})) -gt 0 ]]; then
      NETMASK=($((256-2**(8-${NET[1]}))) 0 0 0)
    elif  [[ $((16-${NET[1]})) -gt 0 ]]; then
      NETMASK=(255 $((256-2**(16-${NET[1]}))) 0 0)
    elif  [[ $((24-${NET[1]})) -gt 0 ]]; then
      NETMASK=(255 255 $((256-2**(24-${NET[1]}))) 0)
    elif [[ $((32-${NET[1]})) -gt 0 ]]; then
      NETMASK=(255 255 255 $((256-2**(32-${NET[1]}))))
    fi
  fi
  [[ ${NETMASK[2]} == 255 ]] && NETMASK[1]=255
  [[ ${NETMASK[1]} == 255 ]] && NETMASK[0]=255
  for i in $(seq 0 $((255-${NETMASK[0]}))); do
    for j in $(seq 0 $((255-${NETMASK[1]}))); do
      for k in $(seq 0 $((255-${NETMASK[2]}))); do
        for l in $(seq 1 $((255-${NETMASK[3]}))); do
          IPS+=( $(( $i+$(( ${IPADDR[0]}  & ${NETMASK[0]})) ))"."$(( $j+$(( ${IPADDR[1]} & ${NETMASK[1]})) ))"."$(($k+$(( ${IPADDR[2]} & ${NETMASK[2]})) ))"."$(($l+$((${IPADDR[3]} & ${NETMASK[3]})) )) )
        done
      done
    done
  done
}

TOPING "${1}"

function HEADER(){
  printf -- '-%.0s' {1..80}
  echo -e "\n"
}

function FOOTER(){
  printf -- '-%.0s' {1..80}
  echo -e "\n"
}

function UP() {
  IP="${1}"
  COUNT="${2}"
  LB="${3}"
  if [ "$( echo $(( COUNT % LB )))" -ne "0" ]; then
    echo -ne "\e[102m\e[30m${IP}\e[0m\t"
  else
    echo -ne "\e[102m\e[30m${IP}\e[0m\n"
  fi
}

function DOWN() {
  IP="${1}"
  COUNT="${2}"
  LB="${3}"
  if [ "$( echo $(( COUNT % LB )))" -ne "0" ] ; then
    echo -ne "\e[101m\e[30m${IP}\e[0m\t"
  else
    echo -ne "\e[101m\e[30m${IP}\e[0m\n"
  fi
}

HEADER
TO=${2}
LB=${3}
while read -r IP; do
  (( COUNT++ ))
  fping -r 1 -t ${TO} "${IP}" > /dev/null 2>&1
  if [ "${?}" -eq 0 ]; then
    UP ${IP} ${COUNT} ${LB}
    (( UPCOUNT++ ))
  else
    DOWN ${IP} ${COUNT} ${LB}
    (( DOWNCOUNT++ ))
  fi
done < <( echo ${IPS[@]} | tr " " "\n" )
echo -e "\n\nHosts:\t: \e[103m\e[30m${COUNT}\e[0m\nUP\t: \e[102m\e[30m${UPCOUNT}\e[0m\nDOWN\t: \e[101m\e[30m\e[5m${DOWNCOUNT}\e[0m\n"
FOOTER
exit 0
